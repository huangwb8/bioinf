## function: clean_trim_galore

## Description
# 对*.fastq.gz文件去常见adapter

## Parameters:
ws=$1
path_sra2case_txt=$ws/input/case/sra2case.txt
path_fastq=$ws/output/fastq
path_log=$ws/log/clean_trim_galore
output=$ws/output/clean-trim_galore
n_all=48 # 开始时的测序长度。这个要看首次fastqc的结果才可以确定。
cut_end5=4 # 因为测序刚刚开始时都会有些不正常。也就是3'端留下(n_all-cut_end)个碱基，就是间接地，5’端被切掉前4个bp
ncore=13 # 48线程时可以设置为13

## Usage
# nohup clean_trim_galore $ws &
# clean_trim_galore $ws
# tail -f $ws/log/clean_trim_galore/*log

## Programe
# mkdir 
mkdir -p $path_log $output
leave_base=`expr ${n_all} - ${cut_end5}`

# read id
cat $path_sra2case_txt | while read id
do
  arr=(${id})
  case=${arr[1]}
  fq1=${case}_1.fastq.gz
  fq2=${case}_2.fastq.gz
  fq=${case}.fastq.gz
  # 一般Illumina在1.9以上的都用phred33; length主要看原本测序序列的长度。如果太短（比如RNA-seq中的片段通常只有60多bp），此时length的值应该要偏低些；core是线程，48核时此参数可设置为13。--hardtrim5 切除5‘端的某几个碱基。--gzip在安装pigz时可以不用啦。--stringency Overlap with adapter sequence required to trim a sequence. 一般设置4即可。-e是Maximum allowed error rate，一般默认是0.1
  if [ -f ${path_fastq}/${fq1} -a -f ${path_fastq}/${fq2} ]; then
  # 双端
  	echo "find: ${fq1},${fq2}. Do trim_galore ..."
    time trim_galore  --paired -q 28 \
        --phred33 --length 35 --stringency 4 \
        --hardtrim3 ${leave_base} \
        -e=0.1 \
        --cores $ncore \
        -o $output $path_fastq/$fq1 $path_fastq/$fq2 \
        > $path_log/trimgalore_paired_${case}.log 2>&1
    echo "Done trim_galore of  ${fq1},${fq2}!"
  elif [ -f ${path_fastq}/${fq} ]; then
  # 单端
      echo "find: ${fq2}"
      time trim_galore -q 28 \
          --phred33 --length 30 --stringency 4 \
          --hardtrim3 ${leave_base} \
          -e=0.1 \
          --cores $ncore \
          -o $output $path_fastq/$fq > \
          $path_log/trimgalore_single_${case}.log 2>&1
  else
  	echo "Files not found: ${fq1},${fq2} or ${fq}"
  fi
done
## End clean_trim_galore
